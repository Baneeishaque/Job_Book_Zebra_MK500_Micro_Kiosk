//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.5466.
// 
namespace Job_Book_Zebra_MK500_Micro_Kiosk.job_time_tracker_service {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service() {
            this.Url = "http://10.1.1.133/job_time_tracker_service/Service.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertJob(
                    string equipment, 
                    string employeeID, 
                    string jobNumber, 
                    string itemNumber, 
                    string coreNumber, 
                    string coreTotal, 
                    string phase, 
                    string maxofWorkinprogress, 
                    string maxnumberTimeEmployeee, 
                    string todopassed, 
                    string doingpassed, 
                    string donepassed, 
                    string firstdataorNot, 
                    string Department_Code, 
                    string actualPhase, 
                    string customerNumber, 
                    string customerdescription, 
                    string coredescription, 
                    string kg, 
                    string thickness) {
            object[] results = this.Invoke("InsertJob", new object[] {
                        equipment,
                        employeeID,
                        jobNumber,
                        itemNumber,
                        coreNumber,
                        coreTotal,
                        phase,
                        maxofWorkinprogress,
                        maxnumberTimeEmployeee,
                        todopassed,
                        doingpassed,
                        donepassed,
                        firstdataorNot,
                        Department_Code,
                        actualPhase,
                        customerNumber,
                        customerdescription,
                        coredescription,
                        kg,
                        thickness});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertJob(
                    string equipment, 
                    string employeeID, 
                    string jobNumber, 
                    string itemNumber, 
                    string coreNumber, 
                    string coreTotal, 
                    string phase, 
                    string maxofWorkinprogress, 
                    string maxnumberTimeEmployeee, 
                    string todopassed, 
                    string doingpassed, 
                    string donepassed, 
                    string firstdataorNot, 
                    string Department_Code, 
                    string actualPhase, 
                    string customerNumber, 
                    string customerdescription, 
                    string coredescription, 
                    string kg, 
                    string thickness, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("InsertJob", new object[] {
                        equipment,
                        employeeID,
                        jobNumber,
                        itemNumber,
                        coreNumber,
                        coreTotal,
                        phase,
                        maxofWorkinprogress,
                        maxnumberTimeEmployeee,
                        todopassed,
                        doingpassed,
                        donepassed,
                        firstdataorNot,
                        Department_Code,
                        actualPhase,
                        customerNumber,
                        customerdescription,
                        coredescription,
                        kg,
                        thickness}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInsertJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateJob(string equipment, string employeeID, string jobNumber, string itemnumber, string CoreNo, string phasepassed, string todopassed, string doingpaased, string donepassed, string coretotalpassed, string actulphase) {
            object[] results = this.Invoke("UpdateJob", new object[] {
                        equipment,
                        employeeID,
                        jobNumber,
                        itemnumber,
                        CoreNo,
                        phasepassed,
                        todopassed,
                        doingpaased,
                        donepassed,
                        coretotalpassed,
                        actulphase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateJob(string equipment, string employeeID, string jobNumber, string itemnumber, string CoreNo, string phasepassed, string todopassed, string doingpaased, string donepassed, string coretotalpassed, string actulphase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateJob", new object[] {
                        equipment,
                        employeeID,
                        jobNumber,
                        itemnumber,
                        CoreNo,
                        phasepassed,
                        todopassed,
                        doingpaased,
                        donepassed,
                        coretotalpassed,
                        actulphase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndUpdateJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectJobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectJobs(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase) {
            object[] results = this.Invoke("SelectJobs", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectJobs(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectJobs", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectJobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Selectmaxofworkinprogressnumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Selectmaxofworkinprogressnumber() {
            object[] results = this.Invoke("Selectmaxofworkinprogressnumber", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectmaxofworkinprogressnumber(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Selectmaxofworkinprogressnumber", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectmaxofworkinprogressnumber(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectmaxoftimeEmployee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectmaxoftimeEmployee() {
            object[] results = this.Invoke("SelectmaxoftimeEmployee", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectmaxoftimeEmployee(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectmaxoftimeEmployee", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectmaxoftimeEmployee(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectNoofWorkinProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectNoofWorkinProgress(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase) {
            object[] results = this.Invoke("SelectNoofWorkinProgress", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectNoofWorkinProgress(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectNoofWorkinProgress", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectNoofWorkinProgress(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectNofRowsinWorkinProgressToupdateDoinginScrumTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectNofRowsinWorkinProgressToupdateDoinginScrumTable(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase) {
            object[] results = this.Invoke("SelectNofRowsinWorkinProgressToupdateDoinginScrumTable", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectNofRowsinWorkinProgressToupdateDoinginScrumTable(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectNofRowsinWorkinProgressToupdateDoinginScrumTable", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectNofRowsinWorkinProgressToupdateDoinginScrumTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectNofRowsinWorkinProgressToupdateDoneinScrumTable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectNofRowsinWorkinProgressToupdateDoneinScrumTable(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase) {
            object[] results = this.Invoke("SelectNofRowsinWorkinProgressToupdateDoneinScrumTable", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectNofRowsinWorkinProgressToupdateDoneinScrumTable(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectNofRowsinWorkinProgressToupdateDoneinScrumTable", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectNofRowsinWorkinProgressToupdateDoneinScrumTable(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectToCheckTableisAlreadyRunningOrNot_For_JobNumberandCoreNo" +
            "s", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectToCheckTableisAlreadyRunningOrNot_For_JobNumberandCoreNos(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, string tableIDsend) {
            object[] results = this.Invoke("SelectToCheckTableisAlreadyRunningOrNot_For_JobNumberandCoreNos", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase,
                        tableIDsend});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectToCheckTableisAlreadyRunningOrNot_For_JobNumberandCoreNos(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, string tableIDsend, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectToCheckTableisAlreadyRunningOrNot_For_JobNumberandCoreNos", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase,
                        tableIDsend}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectToCheckTableisAlreadyRunningOrNot_For_JobNumberandCoreNos(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectToCheckTableisAlreadyRunningOrNot_Without_JobNumberAndCo" +
            "reNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectToCheckTableisAlreadyRunningOrNot_Without_JobNumberAndCoreNumber(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, string tableIDsend) {
            object[] results = this.Invoke("SelectToCheckTableisAlreadyRunningOrNot_Without_JobNumberAndCoreNumber", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase,
                        tableIDsend});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectToCheckTableisAlreadyRunningOrNot_Without_JobNumberAndCoreNumber(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, string tableIDsend, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectToCheckTableisAlreadyRunningOrNot_Without_JobNumberAndCoreNumber", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase,
                        tableIDsend}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectToCheckTableisAlreadyRunningOrNot_Without_JobNumberAndCoreNumber(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectDetails_Department_Code", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectDetails_Department_Code(string TblIDSend) {
            object[] results = this.Invoke("SelectDetails_Department_Code", new object[] {
                        TblIDSend});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelectDetails_Department_Code(string TblIDSend, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SelectDetails_Department_Code", new object[] {
                        TblIDSend}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelectDetails_Department_Code(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_TableID_Scrum_Table_Already_Started_job", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Select_TableID_Scrum_Table_Already_Started_job(string jobsend, string itemSend, string coreSend, string phaseSend) {
            object[] results = this.Invoke("Select_TableID_Scrum_Table_Already_Started_job", new object[] {
                        jobsend,
                        itemSend,
                        coreSend,
                        phaseSend});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelect_TableID_Scrum_Table_Already_Started_job(string jobsend, string itemSend, string coreSend, string phaseSend, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Select_TableID_Scrum_Table_Already_Started_job", new object[] {
                        jobsend,
                        itemSend,
                        coreSend,
                        phaseSend}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelect_TableID_Scrum_Table_Already_Started_job(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_For_Repair_Button", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Select_For_Repair_Button(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase) {
            object[] results = this.Invoke("Select_For_Repair_Button", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelect_For_Repair_Button(string jobNumber, string itemNumber, string employeeID, string coreNumber, string coreTotal, string phase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Select_For_Repair_Button", new object[] {
                        jobNumber,
                        itemNumber,
                        employeeID,
                        coreNumber,
                        coreTotal,
                        phase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelect_For_Repair_Button(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_Number_of_Employees_Working_In_this_Project", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Select_Number_of_Employees_Working_In_this_Project(string workin_Progress_number) {
            object[] results = this.Invoke("Select_Number_of_Employees_Working_In_this_Project", new object[] {
                        workin_Progress_number});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelect_Number_of_Employees_Working_In_this_Project(string workin_Progress_number, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Select_Number_of_Employees_Working_In_this_Project", new object[] {
                        workin_Progress_number}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelect_Number_of_Employees_Working_In_this_Project(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Select_Count_of_Running_WorkinProgress_To_Check_Number_of_runn" +
            "ing_jobs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Select_Count_of_Running_WorkinProgress_To_Check_Number_of_running_jobs(string jobNumber, string itemNumber, string coreNumber, string coreTotal, string phase) {
            object[] results = this.Invoke("Select_Count_of_Running_WorkinProgress_To_Check_Number_of_running_jobs", new object[] {
                        jobNumber,
                        itemNumber,
                        coreNumber,
                        coreTotal,
                        phase});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSelect_Count_of_Running_WorkinProgress_To_Check_Number_of_running_jobs(string jobNumber, string itemNumber, string coreNumber, string coreTotal, string phase, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Select_Count_of_Running_WorkinProgress_To_Check_Number_of_running_jobs", new object[] {
                        jobNumber,
                        itemNumber,
                        coreNumber,
                        coreTotal,
                        phase}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSelect_Count_of_Running_WorkinProgress_To_Check_Number_of_running_jobs(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckThisEmployeewereWorkedInthisProjectOrNot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckThisEmployeewereWorkedInthisProjectOrNot(string workin_Progress_number, string idsendemployee) {
            object[] results = this.Invoke("CheckThisEmployeewereWorkedInthisProjectOrNot", new object[] {
                        workin_Progress_number,
                        idsendemployee});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckThisEmployeewereWorkedInthisProjectOrNot(string workin_Progress_number, string idsendemployee, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckThisEmployeewereWorkedInthisProjectOrNot", new object[] {
                        workin_Progress_number,
                        idsendemployee}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndCheckThisEmployeewereWorkedInthisProjectOrNot(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
