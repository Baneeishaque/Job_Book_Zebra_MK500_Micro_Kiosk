//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5483
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.5483.
// 
namespace Job_Book_Zebra_MK500_Micro_Kiosk.job_time_tracker_service {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public Service() {
            this.Url = "http://192.168.1.102/job_time_tracker_service/Service.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertJob", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertJob(string equipment, string jobNumber, string itemNumber, string coreNumber, string coreTotal, string phase, string status) {
            object[] results = this.Invoke("InsertJob", new object[] {
                        equipment,
                        jobNumber,
                        itemNumber,
                        coreNumber,
                        coreTotal,
                        phase,
                        status});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInsertJob(string equipment, string jobNumber, string itemNumber, string coreNumber, string coreTotal, string phase, string status, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InsertJob", new object[] {
                        equipment,
                        jobNumber,
                        itemNumber,
                        coreNumber,
                        coreTotal,
                        phase,
                        status}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndInsertJob(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
    }
}
